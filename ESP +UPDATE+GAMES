---------------------------------------------------------------------
--  ESP AND MORE COMING SOON – COMPLETO, CORRIGIDO E ORGANIZADO   --
---------------------------------------------------------------------
--  ▸ Rayfield UI     : https://sirius.menu/rayfield               --
--  ▸ Autor           : @coroadinho_37203                          --
--  ▸ Programadores   : @coroadinho_37203 & @Shadownchavoso        --
---------------------------------------------------------------------

-------------------
--  CARREGAR UI  --
-------------------
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Window = Rayfield:CreateWindow({
    Name               = "esp and More coming Soon",
    LoadingTitle       = "Carregando ESP...",
    LoadingSubtitle    = "by @coroadinho_37203",
    ConfigurationSaving = {
        Enabled     = true,
        FolderName  = "ESP_UI",
        FileName    = "esp_menu"
    },
    Discord   = { Enabled = false },
    KeySystem = false,
})

----------------------
--  SERVIÇOS ÚTEIS  --
----------------------
local Players     = game:GetService("Players")
local RunService  = game:GetService("RunService")
local Lighting    = game:GetService("Lighting")
local LocalPlayer = Players.LocalPlayer
local Camera      = workspace.CurrentCamera

---------------------------------------------------
--  VARIÁVEIS & ESTRUTURAS COMPARTILHADAS (ESP)  --
---------------------------------------------------
local ESP_ON            = false
local LINE_RAINBOW_ON   = false
local DISTANCE_ON       = false
local NICK_SIZE         = 14
local NickTable         = {}   -- [player] = BillboardGui
local RainbowLines      = {}   -- {Drawing.Line, ...}

----------------------
--  FUNÇÕES DO ESP  --
----------------------
local function clearNick(player)
    local gui = NickTable[player]
    if gui and gui.Parent then gui:Destroy() end
    NickTable[player] = nil
end

local function clearAllNicks()
    for p, _ in pairs(NickTable) do clearNick(p) end
end

local function makeNick(player)
    if NickTable[player] or not player.Character or not player.Character:FindFirstChild("Head") then return end

    local bill = Instance.new("BillboardGui")
    bill.Name            = "ESPLabel"
    bill.Adornee         = player.Character.Head
    bill.Size            = UDim2.new(0, 200, 0, 50)
    bill.AlwaysOnTop     = true
    bill.StudsOffset     = Vector3.new(0, 2, 0)
    bill.Parent          = player.Character.Head

    local txt            = Instance.new("TextLabel", bill)
    txt.Name             = "NickText"
    txt.Size             = UDim2.new(1, 0, 1, 0)
    txt.BackgroundTransparency = 1
    txt.Font             = Enum.Font.SourceSansBold
    txt.TextStrokeTransparency = 0
    txt.TextScaled       = false

    NickTable[player] = bill
end

local function updateNick(player)
    if not NickTable[player] then makeNick(player) end
    local bill = NickTable[player] ; if not bill then return end
    local txt  = bill.NickText

    txt.TextSize  = NICK_SIZE
    txt.TextColor3= (player.TeamColor == LocalPlayer.TeamColor)
                    and Color3.fromRGB(0,170,255) or Color3.fromRGB(255,0,0)

    if DISTANCE_ON and player.Character and LocalPlayer.Character then
        local dist = math.floor(
            (player.Character.Head.Position - LocalPlayer.Character.Head.Position).Magnitude
        )
        txt.Text = (`%s [%sm]`):format(player.Name, dist)
    else
        txt.Text = player.Name
    end
end

local function updateESP()
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer then
            if ESP_ON then
                updateNick(plr)
            else
                clearNick(plr)
            end
        end
    end
end

-------------------------------
--  FUNÇÕES LINE RAINBOW     --
-------------------------------
local function clearLines()
    for _, ln in ipairs(RainbowLines) do ln:Remove() end
    RainbowLines = {}
end

local function drawLines()
    clearLines()
    if not (ESP_ON and LINE_RAINBOW_ON) then return end

    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("Head") then
            local line = Drawing.new("Line")
            line.Thickness   = 2
            line.Transparency= 1
            table.insert(RainbowLines, line)
        end
    end
end

-- Render Step: move nick labels, atualizar distância e rainbow
RunService.RenderStepped:Connect(function()
    if ESP_ON then
        updateESP()
    end

    if ESP_ON and LINE_RAINBOW_ON then
        local center = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y)
        local i = 1
        for _, plr in pairs(Players:GetPlayers()) do
            if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("Head") then
                local pos, onScr = Camera:WorldToViewportPoint(plr.Character.Head.Position)
                local line = RainbowLines[i]
                if onScr and line then
                    line.From  = center
                    line.To    = Vector2.new(pos.X, pos.Y)
                    line.Color = Color3.fromHSV((tick()*0.2)%1, 1, 1)
                    line.Visible = true
                elseif line then
                    line.Visible = false
                end
                i += 1
            end
        end
    end
end)

-----------------
--  ABA: ESP   --
-----------------
local ESPTab = Window:CreateTab("esp", 4483362458)

ESPTab:CreateToggle({
    Name          = "On ESP",
    CurrentValue  = false,
    Callback      = function(v)
        ESP_ON = v
        if not v then
            clearAllNicks()
            clearLines()
        else
            updateESP()
            drawLines()
        end
    end
})

ESPTab:CreateSlider({
    Name = "Tamanho dos Nicks",
    Range = {0,30},
    Increment = 1,
    CurrentValue = 14,
    Callback = function(v)
        NICK_SIZE = v
    end
})

ESPTab:CreateToggle({
    Name         = "Line Rainbow",
    CurrentValue = false,
    Callback     = function(v)
        LINE_RAINBOW_ON = v
        drawLines()
    end
})

ESPTab:CreateToggle({
    Name         = "DISTANCE",
    CurrentValue = false,
    Callback     = function(v)
        DISTANCE_ON = v
    end
})

-----------------
--  ABA: MAIN  --
-----------------
local MainTab = Window:CreateTab("main", 4483362458)
MainTab:CreateParagraph({ Title = "coming Soon", Content = "" })

---------------------
--  ABA: LIGHTING  --
---------------------
local LightingTab = Window:CreateTab("lighting", 4483362458)
local original = {
    Ambient    = Lighting.Ambient,
    Brightness = Lighting.Brightness,
    ClockTime  = Lighting.ClockTime,
    FogEnd     = Lighting.FogEnd,
}
LightingTab:CreateToggle({
    Name         = "FULL BRIGHT",
    CurrentValue = false,
    Callback     = function(v)
        if v then
            Lighting.Ambient    = Color3.new(1,1,1)
            Lighting.Brightness = 2
            Lighting.ClockTime  = 14
            Lighting.FogEnd     = 100000
        else
            for k, val in pairs(original) do Lighting[k] = val end
        end
    end
})

--------------------------
--  ABA: MINE GAMES     --
--------------------------
local GamesTab = Window:CreateTab("Mine games", 4483362458)

-- === BEAD GAME (Matemática) ===
local beadGUI, beadConn
local function stopBead()
    if beadConn then beadConn:Disconnect() beadConn=nil end
    if beadGUI  then beadGUI:Destroy()  beadGUI=nil  end
end
GamesTab:CreateToggle({
    Name = "Start Bead Game",
    CurrentValue = false,
    Callback = function(on)
        if not on then return stopBead() end

        beadGUI = Instance.new("ScreenGui", LocalPlayer.PlayerGui)
        beadGUI.ResetOnSpawn = false

        local frm = Instance.new("Frame", beadGUI)
        frm.Size = UDim2.fromOffset(260,140)
        frm.Position = UDim2.new(0.5,-130,0.2,0)
        frm.AnchorPoint = Vector2.new(0.5,0)
        frm.BackgroundColor3 = Color3.fromRGB(30,30,30)

        local qLabel = Instance.new("TextLabel", frm)
        qLabel.Size                   = UDim2.new(1,-20,0,40)
        qLabel.Position               = UDim2.new(0,10,0,10)
        qLabel.BackgroundTransparency = 1
        qLabel.TextColor3             = Color3.new(1,1,1)
        qLabel.TextSize               = 20
        qLabel.Font                   = Enum.Font.SourceSansBold

        local box = Instance.new("TextBox", frm)
        box.Size        = UDim2.new(1,-20,0,30)
        box.Position    = UDim2.new(0,10,0,60)
        box.Text        = ""
        box.PlaceholderText = "Resposta..."
        box.TextScaled  = true

        local scoreL = Instance.new("TextLabel", frm)
        scoreL.Size           = UDim2.new(1,-20,0,24)
        scoreL.Position       = UDim2.new(0,10,0,100)
        scoreL.BackgroundTransparency = 1
        scoreL.TextColor3     = Color3.new(1,1,1)
        scoreL.Font           = Enum.Font.SourceSansBold
        scoreL.TextSize       = 18

        local score = 0
        local function newQ()
            local a,b = math.random(8,30), math.random(5,25)
            local ans  = a + b
            qLabel.Text= ("Quanto é %d + %d ?"):format(a,b)
            box.Text=""
            if beadConn then beadConn:Disconnect() end
            beadConn = box.FocusLost:Connect(function(enter)
                if not enter then return end
                if tonumber(box.Text)==ans then
                    score += 3
                end
                scoreL.Text = "Pontos: "..score
                newQ()
            end)
        end
        scoreL.Text ="Pontos: 0"
        newQ()
    end
})

-- === STEPS GAME ===
local stepsGUI, stepConn
local function stopSteps()
    if stepConn then stepConn:Disconnect() stepConn=nil end
    if stepsGUI then stepsGUI:Destroy()  stepsGUI=nil end
end
GamesTab:CreateToggle({
    Name = "Start Game Of Steps",
    CurrentValue = false,
    Callback = function(on)
        if not on then return stopSteps() end

        stepsGUI = Instance.new("ScreenGui", LocalPlayer.PlayerGui)
        stepsGUI.ResetOnSpawn=false

        local lbl = Instance.new("TextLabel", stepsGUI)
        lbl.Size                   = UDim2.fromOffset(200,50)
        lbl.Position               = UDim2.new(0,20,0.1,0)
        lbl.BackgroundColor3       = Color3.fromRGB(0,0,0)
        lbl.TextColor3             = Color3.new(1,1,1)
        lbl.TextSize               = 20
        lbl.Font                   = Enum.Font.SourceSansBold

        local goalL = Instance.new("TextLabel", stepsGUI)
        goalL.Size = lbl.Size
        goalL.Position = UDim2.new(1,-220,0.1,0)
        goalL.AnchorPoint=Vector2.new(0,0)
        goalL.BackgroundColor3=Color3.fromRGB(0,0,0)
        goalL.TextColor3=Color3.new(1,1,1)
        goalL.TextSize=20
        goalL.Font=Enum.Font.SourceSansBold
        goalL.Text="Objetivo: 5000"

        local steps=0
        local lastPos=LocalPlayer.Character.HumanoidRootPart.Position

        stepConn=RunService.Heartbeat:Connect(function()
            local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            if not hrp then return end
            local dist = (hrp.Position - lastPos).Magnitude
            if dist>2 then
                steps+=1
                lastPos=hrp.Position
                lbl.Text="Passos: "..steps
                if steps>=5000 then
                    goalL.Text="Você ganhou 50 pontos!"
                    stopSteps()
                end
            end
        end)
    end
})

-----------------
--  CRÉDITOS  --
-----------------
local CreditsTab = Window:CreateTab("Crédits", 4483362458)
CreditsTab:CreateParagraph({
    Title   = "Direitor",
    Content = "@coroadinho_37203"
})
CreditsTab:CreateParagraph({
    Title   = "Programador",
    Content = "@coroadinho_37203 and @Shadownchavoso"
})
